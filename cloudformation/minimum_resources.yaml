Description: >

    This template creates the following minimum resources for the Workshop:

      - KMS Customer Key
      --- Used to Encrypt and Decrypt requests coming from Lambda microservices
      - Encryption IAM Role
      --- Allows Lambda Encryption microservice to encrypt data
      - Decryption IAM Role
      --- Allows Lambda Decryption microservice to decrypt data

Outputs:

    DecryptionServiceIAMRole:
        Description: IAM Role ARN for Lambda Decryption Service
        Value: !Join ["", [ "export ENC_IAM_ROLE='", !GetAtt DecryptionServiceIAMRole.Arn, "'"]]

    EncryptionServiceIAMRole:
        Description: IAM Role ARN for Lambda Encryption Service
        Value: !Join ["", [ "export DEC_IAM_ROLE='", !GetAtt EncryptionServiceIAMRole.Arn, "'"]]

    KMSKeyId:
        Description: KMS Key for encryption/decryption
        Value: !Ref EncryptionDecryptionKey


Parameters:

    User:
        Description: Username currently defined in $USER or IAM user
        Type: String

Resources:

    EncryptionServiceIAMRole:
        Type: AWS::IAM::Role
        Properties:
            Path: "/"
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Sid: "AllowLambdaServiceToAssumeRole"
                  Effect: Allow
                  Action:
                    - "sts:AssumeRole"
                  Principal:
                    Service:
                      - "lambda.amazonaws.com"
                - 
                  Sid: "AllowEmulambdaToAssumeRole"
                  Effect: "Allow"
                  Action: "sts:AssumeRole"
                  Principal:
                    AWS: !Ref AWS::AccountId
            Policies:
              - 
                PolicyName: "BasicExecution"
                PolicyDocument:
                  Version: "2012-10-17"
                  Statement:
                    - 
                      Action:
                        - "logs:CreateLogGroup"
                        - "logs:CreateLogStream"
                        - "logs:PutLogEvents"
                      Effect: "Allow"
                      Resource: "arn:aws:logs:*:*:*"

    DecryptionServiceIAMRole:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Sid: "AllowLambdaServiceToAssumeRole"
                  Effect: "Allow"
                  Action: 
                    - "sts:AssumeRole"
                  Principal:
                    Service: 
                      - "lambda.amazonaws.com"
                -
                  Sid: "AllowEmulambdaToAssumeRole"
                  Effect: "Allow"
                  Action: 
                    - "sts:AssumeRole"
                  Principal:
                    AWS: !Ref AWS::AccountId
            Policies:
              -
                PolicyName: "BasicExecution"
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                    -
                      Effect: "Allow"
                      Action:
                        - "logs:CreateLogStream"
                        - "logs:CreateLogGroup"
                        - "logs:PutLogEvents"
                      Resource: "arn:aws:logs:*:*:*"

    EncryptionDecryptionKey:
      Type: AWS::KMS::Key
      DependsOn:
        - EncryptionServiceIAMRole
        - DecryptionServiceIAMRole
      Properties:
        Description: "Encryption and Decryption key for Lambda workshop"
        KeyPolicy:
          Id: "LambdaEncDec"
          Version: "2012-10-17"
          Statement:
            - 
              Sid: "Allow administration of the key"
              Effect: "Allow"
              Action:
                - "kms:Create*"
                - "kms:Describe*"
                - "kms:Enable*"
                - "kms:List*"
                - "kms:Put*"
                - "kms:Update*"
                - "kms:Revoke*"
                - "kms:Disable*"
                - "kms:Get*"
                - "kms:Delete*"
                - "kms:ScheduleKeyDeletion"
                - "kms:CancelKeyDeletion"
              Principal:
                AWS: !Ref AWS::AccountId
              Resource: '*'
            - 
              Sid: "Allow Encryption Service to use this key"
              Effect: "Allow"
              Action:
                - "kms:Encrypt"
                - "kms:GenerateDataKey"
              Principal:
                AWS: 
                  - !GetAtt EncryptionServiceIAMRole.Arn
                  - !Join ["", ["arn:aws:iam::", !Ref AWS::AccountId, ":user/", !Ref User ]]
              Resource: '*'
            - 
              Sid: "Allow Decryption Service to use this key"
              Effect: "Allow"
              Action:
                - "kms:Decrypt"
                - "kms:GenerateDataKey"
              Principal:
                AWS: 
                  - !GetAtt DecryptionServiceIAMRole.Arn
                  - !Join ["", ["arn:aws:iam::", !Ref AWS::AccountId, ":user/", !Ref User ]]
              Resource: '*'